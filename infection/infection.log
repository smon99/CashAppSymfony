Escaped mutants:
================

1) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Model/Balance.php:33    [M] GreaterThan

--- Original
+++ New
@@ @@
         $currentTime = new \DateTime();
         $oneHourAgo = $currentTime->sub(new \DateInterval('PT1H'));
         foreach ($transactions as $transaction) {
-            if ($transaction->createdAt > $oneHourAgo) {
+            if ($transaction->createdAt >= $oneHourAgo) {
                 $balance += $transaction->value;
             }
         }


2) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Model/Balance.php:49    [M] GreaterThan

--- Original
+++ New
@@ @@
         $currentTime = new \DateTime();
         $oneDayAgo = $currentTime->sub(new \DateInterval('PT24H'));
         foreach ($transactions as $transaction) {
-            if ($transaction->createdAt > $oneDayAgo) {
+            if ($transaction->createdAt >= $oneDayAgo) {
                 $balance += $transaction->value;
             }
         }


3) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Model/SetupTransaction.php:16    [M] Concat

--- Original
+++ New
@@ @@
         $sender = new TransactionDTO();
         $receiver = new TransactionDTO();
         $sender->userID = $userDTO->userID;
-        $sender->purpose = 'Geldtransfer an ' . $receiverDTO->username;
+        $sender->purpose = $receiverDTO->username . 'Geldtransfer an ';
         $sender->createdAt = new \DateTime();
         $sender->value = $value * -1;
         $receiver->userID = $receiverDTO->userID;


4) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Model/SetupTransaction.php:16    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $sender = new TransactionDTO();
         $receiver = new TransactionDTO();
         $sender->userID = $userDTO->userID;
-        $sender->purpose = 'Geldtransfer an ' . $receiverDTO->username;
+        $sender->purpose = $receiverDTO->username;
         $sender->createdAt = new \DateTime();
         $sender->value = $value * -1;
         $receiver->userID = $receiverDTO->userID;


5) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Model/SetupTransaction.php:16    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $sender = new TransactionDTO();
         $receiver = new TransactionDTO();
         $sender->userID = $userDTO->userID;
-        $sender->purpose = 'Geldtransfer an ' . $receiverDTO->username;
+        $sender->purpose = 'Geldtransfer an ';
         $sender->createdAt = new \DateTime();
         $sender->value = $value * -1;
         $receiver->userID = $receiverDTO->userID;


6) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Model/SetupTransaction.php:18    [M] DecrementInteger

--- Original
+++ New
@@ @@
         $sender->userID = $userDTO->userID;
         $sender->purpose = 'Geldtransfer an ' . $receiverDTO->username;
         $sender->createdAt = new \DateTime();
-        $sender->value = $value * -1;
+        $sender->value = $value * -2;
         $receiver->userID = $receiverDTO->userID;
         $receiver->purpose = 'Zahlung erhalten von ' . $userDTO->username;
         $receiver->createdAt = new \DateTime();


7) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Model/SetupTransaction.php:18    [M] IncrementInteger

--- Original
+++ New
@@ @@
         $sender->userID = $userDTO->userID;
         $sender->purpose = 'Geldtransfer an ' . $receiverDTO->username;
         $sender->createdAt = new \DateTime();
-        $sender->value = $value * -1;
+        $sender->value = $value * -0;
         $receiver->userID = $receiverDTO->userID;
         $receiver->purpose = 'Zahlung erhalten von ' . $userDTO->username;
         $receiver->createdAt = new \DateTime();


8) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Model/SetupTransaction.php:21    [M] Concat

--- Original
+++ New
@@ @@
         $sender->createdAt = new \DateTime();
         $sender->value = $value * -1;
         $receiver->userID = $receiverDTO->userID;
-        $receiver->purpose = 'Zahlung erhalten von ' . $userDTO->username;
+        $receiver->purpose = $userDTO->username . 'Zahlung erhalten von ';
         $receiver->createdAt = new \DateTime();
         $receiver->value = $value;
         return ["sender" => $sender, "receiver" => $receiver];
     }
 }


9) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Model/SetupTransaction.php:21    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $sender->createdAt = new \DateTime();
         $sender->value = $value * -1;
         $receiver->userID = $receiverDTO->userID;
-        $receiver->purpose = 'Zahlung erhalten von ' . $userDTO->username;
+        $receiver->purpose = $userDTO->username;
         $receiver->createdAt = new \DateTime();
         $receiver->value = $value;
         return ["sender" => $sender, "receiver" => $receiver];
     }
 }


10) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Model/SetupTransaction.php:21    [M] ConcatOperandRemoval

--- Original
+++ New
@@ @@
         $sender->createdAt = new \DateTime();
         $sender->value = $value * -1;
         $receiver->userID = $receiverDTO->userID;
-        $receiver->purpose = 'Zahlung erhalten von ' . $userDTO->username;
+        $receiver->purpose = 'Zahlung erhalten von ';
         $receiver->createdAt = new \DateTime();
         $receiver->value = $value;
         return ["sender" => $sender, "receiver" => $receiver];
     }
 }


11) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Model/SetupTransaction.php:25    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
         $receiver->purpose = 'Zahlung erhalten von ' . $userDTO->username;
         $receiver->createdAt = new \DateTime();
         $receiver->value = $value;
-        return ["sender" => $sender, "receiver" => $receiver];
+        return ["receiver" => $receiver];
     }
 }


12) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Validation/DayValidator.php:16    [M] Plus

--- Original
+++ New
@@ @@
     public function validate(float $amount, int $userID) : void
     {
         $dayBalance = $this->balance->calculateBalancePerDay($userID);
-        $limit = $dayBalance + $amount;
+        $limit = $dayBalance - $amount;
         if ($limit > 500.0) {
             throw new AccountValidationException('Tägliches Einzahlungslimit von 500€ überschritten!');
         }
     }
 }


13) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Validation/DayValidator.php:18    [M] GreaterThan

--- Original
+++ New
@@ @@
     {
         $dayBalance = $this->balance->calculateBalancePerDay($userID);
         $limit = $dayBalance + $amount;
-        if ($limit > 500.0) {
+        if ($limit >= 500.0) {
             throw new AccountValidationException('Tägliches Einzahlungslimit von 500€ überschritten!');
         }
     }
 }


14) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Validation/DayValidator.php:18    [M] GreaterThanNegotiation

--- Original
+++ New
@@ @@
     {
         $dayBalance = $this->balance->calculateBalancePerDay($userID);
         $limit = $dayBalance + $amount;
-        if ($limit > 500.0) {
+        if ($limit <= 500.0) {
             throw new AccountValidationException('Tägliches Einzahlungslimit von 500€ überschritten!');
         }
     }
 }


15) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Validation/DayValidator.php:19    [M] Throw_

--- Original
+++ New
@@ @@
         $dayBalance = $this->balance->calculateBalancePerDay($userID);
         $limit = $dayBalance + $amount;
         if ($limit > 500.0) {
-            throw new AccountValidationException('Tägliches Einzahlungslimit von 500€ überschritten!');
+            new AccountValidationException('Tägliches Einzahlungslimit von 500€ überschritten!');
         }
     }
 }


16) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Validation/HourValidator.php:16    [M] Plus

--- Original
+++ New
@@ @@
     public function validate(float $amount, int $userID) : void
     {
         $hourBalance = $this->balance->calculateBalancePerHour($userID);
-        $limit = $hourBalance + $amount;
+        $limit = $hourBalance - $amount;
         if ($limit > 100.0) {
             throw new AccountValidationException('Stündliches Einzahlungslimit von 100€ überschritten!');
         }
     }
 }


17) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Validation/HourValidator.php:18    [M] GreaterThan

--- Original
+++ New
@@ @@
     {
         $hourBalance = $this->balance->calculateBalancePerHour($userID);
         $limit = $hourBalance + $amount;
-        if ($limit > 100.0) {
+        if ($limit >= 100.0) {
             throw new AccountValidationException('Stündliches Einzahlungslimit von 100€ überschritten!');
         }
     }
 }


18) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Validation/HourValidator.php:18    [M] GreaterThanNegotiation

--- Original
+++ New
@@ @@
     {
         $hourBalance = $this->balance->calculateBalancePerHour($userID);
         $limit = $hourBalance + $amount;
-        if ($limit > 100.0) {
+        if ($limit <= 100.0) {
             throw new AccountValidationException('Stündliches Einzahlungslimit von 100€ überschritten!');
         }
     }
 }


19) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Validation/HourValidator.php:19    [M] Throw_

--- Original
+++ New
@@ @@
         $hourBalance = $this->balance->calculateBalancePerHour($userID);
         $limit = $hourBalance + $amount;
         if ($limit > 100.0) {
-            throw new AccountValidationException('Stündliches Einzahlungslimit von 100€ überschritten!');
+            new AccountValidationException('Stündliches Einzahlungslimit von 100€ überschritten!');
         }
     }
 }


20) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Validation/SingleValidator.php:9    [M] LessThan

--- Original
+++ New
@@ @@
 {
     public function validate(float $amount, int $userID) : void
     {
-        if ($amount < 0.01 || $amount > 50) {
+        if ($amount <= 0.01 || $amount > 50) {
             throw new AccountValidationException('Bitte einen Betrag von mindestens 0.01€ und maximal 50€ eingeben!');
         }
     }
 }


21) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Validation/SingleValidator.php:9    [M] LessThanNegotiation

--- Original
+++ New
@@ @@
 {
     public function validate(float $amount, int $userID) : void
     {
-        if ($amount < 0.01 || $amount > 50) {
+        if ($amount >= 0.01 || $amount > 50) {
             throw new AccountValidationException('Bitte einen Betrag von mindestens 0.01€ und maximal 50€ eingeben!');
         }
     }
 }


22) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Validation/SingleValidator.php:9    [M] GreaterThan

--- Original
+++ New
@@ @@
 {
     public function validate(float $amount, int $userID) : void
     {
-        if ($amount < 0.01 || $amount > 50) {
+        if ($amount < 0.01 || $amount >= 50) {
             throw new AccountValidationException('Bitte einen Betrag von mindestens 0.01€ und maximal 50€ eingeben!');
         }
     }
 }


23) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Business/Validation/SingleValidator.php:9    [M] LogicalOrAllSubExprNegation

--- Original
+++ New
@@ @@
 {
     public function validate(float $amount, int $userID) : void
     {
-        if ($amount < 0.01 || $amount > 50) {
+        if (!($amount < 0.01) || !($amount > 50)) {
             throw new AccountValidationException('Bitte einen Betrag von mindestens 0.01€ und maximal 50€ eingeben!');
         }
     }
 }


24) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Persistence/TransactionEntityManager.php:22    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function create(TransactionDTO $accountDTO) : void
     {
         $transaction = $this->transactionMapper->dtoToEntity($accountDTO);
-        $this->entityManager->persist($transaction);
+        
         $this->entityManager->flush();
     }
 }


25) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/Account/Persistence/TransactionEntityManager.php:23    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $transaction = $this->transactionMapper->dtoToEntity($accountDTO);
         $this->entityManager->persist($transaction);
-        $this->entityManager->flush();
+        
     }
 }


26) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/User/Communication/Controller/RegistrationController.php:26    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $errors = null;
         $form = $this->createForm(UserDTOType::class);
-        $form->handleRequest($request);
+        
         if ($form->isSubmitted() && $form->isValid()) {
             $userFormData = $form->getData();
             $plainPassword = $this->userBusinessFacade->toEntity($userFormData);


27) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Component/User/Communication/Controller/RegistrationController.php:28    [M] LogicalAndSingleSubExprNegation

--- Original
+++ New
@@ @@
         $errors = null;
         $form = $this->createForm(UserDTOType::class);
         $form->handleRequest($request);
-        if ($form->isSubmitted() && $form->isValid()) {
+        if ($form->isSubmitted() && !$form->isValid()) {
             $userFormData = $form->getData();
             $plainPassword = $this->userBusinessFacade->toEntity($userFormData);
             $password = $passwordHasher->hashPassword($plainPassword, $plainPassword->getPassword());


28) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:21    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


29) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:22    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        $builder->add('username', TextType::class, [])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


30) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:23    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        $builder->add('username', TextType::class, ['constraints' => [new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


31) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:24    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        $builder->add('username', TextType::class, ['constraints' => [new NotBlank([]), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


32) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:27    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


33) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:28    [M] DecrementInteger

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 2, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


34) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:28    [M] IncrementInteger

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 4, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


35) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:30    [M] DecrementInteger

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 29, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


36) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:30    [M] IncrementInteger

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 31, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


37) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:35    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, [])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


38) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:36    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


39) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:37    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank([]), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


40) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:40    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email([])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


41) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:45    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, [])->add('submit', SubmitType::class);
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


42) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:46    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


43) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:47    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank([]), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


44) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:51    [M] DecrementInteger

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 5, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


45) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:51    [M] IncrementInteger

--- Original
+++ New
@@ @@
 {
     public function buildForm(FormBuilderInterface $builder, array $options) : void
     {
-        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 6, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
+        $builder->add('username', TextType::class, ['constraints' => [new NotBlank(['message' => 'Bitte einen Benutzernamen auswählen!']), new Length(['min' => 3, 'minMessage' => 'Benutzername sollte mindestens 3 Zeichen lang sein!', 'max' => 30, 'maxMessage' => 'Benutzername sollte maximal 30 Zeichen lang sein!'])]])->add('email', EmailType::class, ['constraints' => [new NotBlank(['message' => 'Bitte eine Email-Adresse eingeben!']), new Email(['message' => 'Ungültige Email-Adresse!'])]])->add('password', PasswordType::class, ['constraints' => [new NotBlank(['message' => 'Bitte ein Passwort eingeben!']), new Length(['min' => 7, 'minMessage' => 'Bitte ein Passwort mit mindestens 6 Zeichen auswählen!'])]])->add('submit', SubmitType::class);
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {


46) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:61    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {
-        $resolver->setDefaults(['data_class' => UserDTO::class]);
+        $resolver->setDefaults([]);
     }
 }


47) /home/simondewendt/PhpstormProjects/CashAppSymfony/src/Form/UserDTOType.php:61    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function configureOptions(OptionsResolver $resolver) : void
     {
-        $resolver->setDefaults(['data_class' => UserDTO::class]);
+        
     }
 }


Timed Out mutants:
==================

Skipped mutants:
================
